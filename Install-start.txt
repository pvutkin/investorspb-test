üöÄ –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∑–∞–ø—É—Å–∫—É –ø—Ä–æ–µ–∫—Ç–∞

üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:

- **Python 3.8+** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 3.10+)
- **Node.js 14+** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è LTS –≤–µ—Ä—Å–∏—è)
- **PostgreSQL 12+**
- **Docker –∏ Docker Compose** (–¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è)
- **Git** (–¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è)

üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π

```bash
python --version
node --version
npm --version
docker --version
docker-compose --version
```

---

‚öôÔ∏è 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞ (Django)

1.1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
git clone <your-repo-url>
cd your-project

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
python -m venv venv

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è (Linux/MacOS)
source venv/bin/activate

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è (Windows)
venv\Scripts\activate
```

1.2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

```bash
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -r requirements.txt

# –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
pip install -r requirements-dev.txt
```

1.3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL

```bash
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
sudo -u postgres psql

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE DATABASE your_database_name;
CREATE USER your_username WITH PASSWORD 'your_strong_password';
ALTER ROLE your_username SET client_encoding TO 'utf8';
ALTER ROLE your_username SET default_transaction_isolation TO 'read committed';
ALTER ROLE your_username SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE your_database_name TO your_username;
\q
```

1.4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–µ–Ω–¥–∞:

```env
# –î–µ–≤ —Ä–µ–∂–∏–º
DEBUG=True

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á!)
SECRET_KEY=your-unique-django-secret-key-here

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://your_username:your_strong_password@localhost:5432/your_database_name

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
ALLOWED_HOSTS=localhost,127.0.0.1
TIME_ZONE=Europe/Moscow
```

üîí –í–∞–∂–Ω–æ: –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SECRET_KEY –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
```bash
python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
```

1.5. –ú–∏–≥—Ä–∞—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫

```bash
# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
python manage.py migrate

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
python manage.py createsuperuser

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)
python manage.py loaddata fixtures/*.json

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
python manage.py runserver
```

---

‚ö° 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (React + Vite)

2.1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

```bash
cd frontend

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# –ò–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º yarn
yarn install
```

2.2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –ø–∞–ø–∫–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:

```env
# API URL
VITE_API_URL=http://localhost:8000

# –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
VITE_APP_ENV=development

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
VITE_APP_NAME=My App
```

2.3. –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
# –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞
npm run dev

ü§ñ 3. Telegram –±–æ—Ç

3.1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

```bash
cd telegram-bot
```

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env`:

```env
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather
BOT_TOKEN=your-telegram-bot-token-here

# API URL –±—ç–∫–µ–Ω–¥–∞
API_URL=http://localhost:8000/api/

# –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
DEBUG=True

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Webhook (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
WEBHOOK_URL=https://yourdomain.com/webhook
WEBHOOK_PORT=8443
```

3.2. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

```bash
# –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ)
source ../venv/bin/activate  # Linux/MacOS
# –∏–ª–∏
../venv/Scripts/activate     # Windows

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±–æ—Ç–∞
pip install -r requirements.txt

# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ polling
python bot.py

# –ò–ª–∏ –¥–ª—è production (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏)
python -m bot
```

---

üê≥ 4. Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

4.1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:

```env
# PostgreSQL
POSTGRES_DB=your_production_db
POSTGRES_USER=your_production_user
POSTGRES_PASSWORD=your_strong_production_password

# Django
SECRET_KEY=your-production-secret-key-must-be-strong
DEBUG=0
ALLOWED_HOSTS=localhost,127.0.0.1,.yourdomain.com
DATABASE_URL=postgresql://your_production_user:your_strong_production_password@db:5432/your_production_db

# –ë–æ—Ç
BOT_TOKEN=your-production-bot-token
API_URL=http://backend:8000/api/

# –§—Ä–æ–Ω—Ç–µ–Ω–¥
VITE_API_URL=http://localhost:8000
```

4.2. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

```bash
# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose up -d --build

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose up -d backend frontend db

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
docker-compose logs -f
docker-compose logs -f backend
docker-compose logs -f frontend

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
docker-compose down

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º volumes
docker-compose down -v

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
docker-compose up -d --build backend
```

4.3. –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker

```bash
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
docker-compose exec backend python manage.py migrate

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
docker-compose exec backend python manage.py createsuperuser

# –°–±–æ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
docker-compose exec backend python manage.py collectstatic --noinput
```

---

üìä 5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

–î–ª—è –±—ç–∫–µ–Ω–¥–∞:

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
python manage.py makemigrations

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
python manage.py makemigrations --dry-run --verbosity 3

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
python manage.py test
python manage.py test --verbosity=2
python manage.py test app_name.tests.TestClass

# –°–±–æ—Ä —Å—Ç–∞—Ç–∏–∫–∏
python manage.py collectstatic

# Shell —Å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π –º–æ–¥–µ–ª–µ–π
python manage.py shell_plus

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
python manage.py check --deploy

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–∫—Å—Ç—É—Ä
python manage.py dumpdata app.model --indent=2 > fixtures/file.json
```

–î–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:

```bash
# –°–±–æ—Ä–∫–∞ –¥–ª—è production
npm run build

# Preview production —Å–±–æ—Ä–∫–∏
npm run preview

# –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞
npm run build -- --profile
npx vite-bundle-visualizer

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è TypeScript)
npm run type-check

# –õ–∏–Ω—Ç–∏–Ω–≥
npm run lint
npm run lint -- --fix
```

---

üîç 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤:

| –°–µ—Ä–≤–∏—Å | URL | –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç |
|--------|-----|---------------------|
| –ë—ç–∫–µ–Ω–¥ | http://localhost:8000/admin | –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∫–∏ Django |
| –ë—ç–∫–µ–Ω–¥ API | http://localhost:8000/api/ | JSON –æ—Ç–≤–µ—Ç API |
| –§—Ä–æ–Ω—Ç–µ–Ω–¥ | http://localhost:3000 | –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è |
| –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API | http://localhost:8000/api/docs/ | Swagger/Redoc (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ) |

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã:

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
curl http://localhost:8000/api/health/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
curl http://localhost:3000

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
docker-compose exec db psql -U your_user -d your_db -c "SELECT version();"
```

üö® 7. –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ü—Ä–æ–±–ª–µ–º–∞: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
**–†–µ—à–µ–Ω–∏–µ:** –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å DATABASE_URL –∏ —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω

### –ü—Ä–æ–±–ª–µ–º–∞: CORS –æ—à–∏–±–∫–∏
**–†–µ—à–µ–Ω–∏–µ:** –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ settings.py

### –ü—Ä–æ–±–ª–µ–º–∞: –ú–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
**–†–µ—à–µ–Ω–∏–µ:** –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ

### –ü—Ä–æ–±–ª–µ–º–∞: –ü–æ—Ä—Ç —É–∂–µ –∑–∞–Ω—è—Ç
**–†–µ—à–µ–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–Ω—è–≤—à–∏–π –ø—Ä–æ—Ü–µ—Å—Å

```bash
# –ü–æ–∏—Å–∫ –∑–∞–Ω—è—Ç–æ–≥–æ –ø–æ—Ä—Ç–∞
lsof -i :8000
netstat -tulpn | grep :8000

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
kill -9 <PID>
```

---

üìù 8. Next Steps

–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:

1. ‚úÖ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CI/CD –ø–∞–π–ø–ª–∞–π–Ω
2. ‚úÖ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
3. ‚úÖ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
4. ‚úÖ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
5. ‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –¥–µ–ø–ª–æ–π –Ω–∞ staging –æ–∫—Ä—É–∂–µ–Ω–∏–∏